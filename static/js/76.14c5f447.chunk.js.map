{"version":3,"file":"static/js/76.14c5f447.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/movies/movies.module.css?0ac1","pages/movies/index.js","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"movies_form__RJxSH\",\"headline\":\"movies_headline__SzYQC\",\"container\":\"movies_container__RaY19\",\"button\":\"movies_button__cPv1s\",\"input\":\"movies_input__rHz1z\",\"movielist\":\"movies_movielist__2TWYq\",\"movieContainer\":\"movies_movieContainer__mjoMf\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMovies } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './movies.module.css';\n\nfunction Movies() {\n  const [queryResults, setQueryResults] = useState(false); //false\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query');\n\n  useEffect(() => {\n    if (queryParam) {\n      fetchMovies(queryParam)\n        .then(data => {\n          setQueryResults(data);\n        })\n        .catch(error => {\n          console.error('Error fetching movies:', error);\n        });\n    } else {\n      // Jeśli brak parametru zapytania, ustaw listę wyników na pustą\n      setQueryResults(false);\n    }\n  }, [queryParam]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const input = form.elements.searchQuery.value;\n\n    const data = await fetchMovies(queryParam || input);\n    setQueryResults(data);\n    setSearchParams({ query: input });\n  };\n\n  return (\n    <div className={css.container}>\n      <h1 className={css.headline}>Movies</h1>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input className={css.input} name=\"searchQuery\"></input>\n        <button className={css.button}>Search</button>\n      </form>\n\n      <ul className={css.movielist}>\n        {queryResults.length > 0\n          ? queryResults.map(movie => (\n              <li key={movie.id}>\n                <div className={css.movieContainer}>\n                  <img\n                    alt={movie.original_title}\n                    src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                  />\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    {movie.title}\n                  </Link>\n                </div>\n              </li>\n            ))\n          : null}\n      </ul>\n      {queryResults.length === 0 && <p>No results found :(</p>}\n    </div>\n  );\n}\n\nexport default Movies;\n","const headers = {\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZjljNGQ1OGI3Nzc5Y2E3ZjU0NzQzOGVjMDY1YTdkMiIsInN1YiI6IjYzYWRlYjM2MWY3NDhiMDBjOGI3NTk3ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.yuBGdZBeGbe4GxiKZv6q5aaLChprjgO_x8cJYcfPPzA',\n  accept: 'application/json',\n};\n\nasync function fetchAPI() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      {\n        headers,\n      }\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport default fetchAPI;\n\nexport const getMovieDetails = async movieId => {   //movieId\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      {\n        headers,\n      }\n    );\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchCredits = async movieId => {    //cast\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n      { headers }\n    );\n    const data = response.json();\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {    //reviews\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      { headers }\n    );\n    const data = response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport async function fetchMovies(query) {    //movies\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      { headers }\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","queryResults","setQueryResults","location","useLocation","useSearchParams","searchParams","setSearchParams","queryParam","get","useEffect","fetchMovies","then","data","catch","error","console","handleSubmit","e","preventDefault","form","currentTarget","input","elements","searchQuery","value","query","className","css","onSubmit","name","length","map","movie","alt","original_title","src","poster_path","to","id","state","from","title","headers","Authorization","accept","fetchAPI","fetch","response","json","results","getMovieDetails","movieId","log","fetchCredits","fetchReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}